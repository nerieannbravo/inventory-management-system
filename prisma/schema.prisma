// Crush ako ni Nerie Ann.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // url      = "postgresql://postgres:obGVLTjkBfaLNAuADJifzuVjTTEmpjcW@crossover.proxy.rlwy.net:36212/railway"
  // url      = "postgresql://postgres:ahPlWkZoDRdvmKptXQPXqSHplILdXlbd@hopper.proxy.rlwy.net:29736/railway"
}

model InventoryItem {
  item_id       String          @id @db.VarChar(10)
  category_id   String
  item_name     String          @db.VarChar(100)
  unit_measure  String          @db.VarChar(20)
  current_stock Int             @default(0)
  reorder_level Int             @default(0)
  status        InventoryStatus
  date_created  DateTime        @default(now())
  date_updated  DateTime        @updatedAt
  isdeleted     Boolean         @default(false)
  created_by    String
  batches       Batch[]
  employeeRequests EmployeeRequest[]
  bus           Bus[]
  category      Category        @relation(fields: [category_id], references: [category_id])
 
  @@map("inventory_items")
}

model Batch {
  batch_id           String        @id @db.VarChar(10)
  item_id            String
  f_item_id          String        @db.VarChar(10)
  usable_quantity    Int           @default(0)
  defective_quantity Int           @default(0)
  missing_quantity   Int           @default(0)
  remarks            String?       @db.VarChar(255)
  expiration_date    DateTime?
  date_created       DateTime      @default(now())
  created_by         String
  isdeleted          Boolean       @default(false)
  inventoryItem      InventoryItem @relation(fields: [item_id], references: [item_id])

  @@map("batches")
}

model Category {
  category_id    String          @id @db.VarChar(10)
  category_name  String          @unique @db.VarChar(100)
  date_created   DateTime        @default(now())
  isdeleted      Boolean         @default(false)
  inventoryItems InventoryItem[]

  @@map("categories")
}

model EmployeeRequest {
  request_id    String          @id @db.VarChar(10)
  item_id       String            
  emp_id        String          @db.VarChar(10)
  request_type  RequestType     
  quantity      Int
  req_purpose   String          @db.VarChar(255)
  status        RequestStatus   
  expected_return_date DateTime?
  actual_return_date DateTime?
  date_created  DateTime        @default(now())
  date_updated  DateTime        @updatedAt
  isdeleted     Boolean         @default(false)
  created_by    Int
  inventoryItem InventoryItem   @relation(fields: [item_id], references: [item_id])

  @@map("employee_requests")
}

model Bus {
  bus_id          String          @id @db.VarChar(10)
  item_id         String
  plate_number    String          @unique
  body_number     String          @unique @db.VarChar(20)
  body_builder    BodyBuilder
  bus_type        BusType
  manufacturer    String
  status          BusStatus
  chasis_number   String          @unique @db.VarChar(50)
  engine_number   String          @unique @db.VarChar(50)
  seat_capacity   Int
  model           String          @db.VarChar(50)
  year_model      Int
  route           String?          @db.VarChar(10)
  condition       BusCondition
  acquisition_date DateTime
  acquisition_method AcquisitionMethod
  warranty_expiration_date DateTime?
  registration_status  RegistrationStatus
  date_created    DateTime        @default(now())
  date_updated    DateTime        @updatedAt
  created_by      Int
  inventoryItem   InventoryItem   @relation(fields: [item_id], references: [item_id])

  secondHandDetails     SecondHandDetails?
  brandNewDetails       BrandNewDetails?
  busOtherFiles            BusOtherFiles[]

  @@map("bus")
}

model SecondHandDetails {
  s_bus_id               String    @id
  previous_owner         String
  previous_owner_contact String
  source                 BusSource
  odometer_reading       Int
  last_registration_date DateTime
  last_maintenance_date  DateTime
  bus_condition_notes    String?

  bus                    Bus    @relation(fields: [s_bus_id], references: [bus_id], onDelete: Cascade)
}

model BrandNewDetails {
  b_bus_id        String    @id
  dealer_name     String
  dealer_contact  String

  bus             Bus    @relation(fields: [b_bus_id], references: [bus_id], onDelete: Cascade)
}

model BusOtherFiles {
  bus_files_id    String    @id @db.VarChar(10)
  file_name       String
  file_type       String
  file_url       String
  date_uploaded   DateTime @default(now())

  bus_id          String
  bus             Bus    @relation(fields: [bus_id], references: [bus_id], onDelete: Cascade)
}

enum InventoryStatus {
  LOW_STOCK
  AVAILABLE
  NOT_AVAILABLE
  OUT_OF_STOCK
  UNDER_MAINTENANCE
  EXPIRED
  IN_USED
  DISPOSED
}

enum RequestType {
  BORROW
  CONSUME
}

enum RequestStatus {
  RETURNED
  NOT_RETURNED
  CONSUMED
  PARTIALLY_CONSUMED
  CANCELLED
}

enum BodyBuilder {
  AGILA
  HILLTOP
  RBM
  DARJ
}

enum BusType {
  AIRCONDITIONED
  ORDINARY
}

enum BusStatus {
  ACTIVE
  DECOMMISSIONED
  UNDER_MAINTENANCE
}

enum BusCondition {
  BRAND_NEW
  SECOND_HAND
}

enum AcquisitionMethod {
  PURCHASED
  LEASED
  DONATED
}

enum RegistrationStatus {
  REGISTERED
  NOT_REGISTERED
  NEEDS_RENEWAL
  EXPIRED
}

enum BusSource {
  DEALERSHIP
  ACTION
  PRIVATE_INDIVIDUAL
}